---
# Source: minio/templates/00-rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: minio-sa 
  namespace: minio
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/sync-wave: "-20"
---
# Source: minio/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: minio-creds
  labels:
    app: minio
  namespace: minio
stringData:
  MINIO_ROOT_USER: "minio"
  MINIO_ROOT_PASSWORD: "minioredhat"
---
# Source: minio/templates/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-pvc
  namespace: minio
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 200Gi
---
# Source: minio/templates/00-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: minio-sa-rolebinding
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/sync-wave: "-10"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: minio-sa
    namespace: minio
---
# Source: minio/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: minio
  namespace: minio
spec:
  ports:
    - protocol: TCP
      name: minio
      port: 9000
  selector:
    app: minio
---
# Source: minio/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: minio-console
  namespace: minio
spec:
  ports:
    - protocol: TCP
      name: minio-console
      port: 9001
  selector:
    app: minio
---
# Source: minio/templates/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: minio
  namespace: minio
  labels:
    app: minio
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
        - name: minio
          image: "quay.io/minio/minio"
          args: ['server', '/data', '--console-address', ':9001']
          ports:
            - name: minio
              containerPort: 9000
          volumeMounts:
            - name: minio-volume
              mountPath: /data
          env:
            - name: MINIO_SERVER_URL
              value: "https://minio.apps.mgmt2.npss.bos2.lab"
            - name: MINIO_BROWSER_REDIRECT_URL
              value: "https://minio-console.apps.mgmt2.npss.bos2.lab"
            - name: MINIO_ROOT_USER
              valueFrom:
                secretKeyRef:
                  name: minio-creds
                  key: MINIO_ROOT_USER
            - name: MINIO_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: minio-creds
                  key: MINIO_ROOT_PASSWORD
      volumes:
        - name: minio-volume
          persistentVolumeClaim:
            claimName: minio-pvc
---
# Source: minio/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: minio
  annotations:
    route.openshift.io/termination: edge
spec:
  rules:
    - host: "minio.apps.mgmt2.npss.bos2.lab"
      http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: minio
              port:
                number: 9000
---
# Source: minio/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: minio-console
  annotations:
    route.openshift.io/termination: edge
spec:
  rules:
    - host: "minio-console.apps.mgmt2.npss.bos2.lab"
      http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: minio-console
              port:
                number: 9001

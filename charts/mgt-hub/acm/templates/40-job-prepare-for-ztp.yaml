apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "40"
  name: acm-config
  namespace: {{ .Values.acm.namespace }} 
spec:
  template:
    spec:
      containers:
      - env:
        - name: "HTTP_PROXY"
          value: "http://192.168.32.4:3128"
        - name: "HTTPS_PROXY"
          value: "http://192.168.32.4:3128"
        - name: "NO_PROXY"
          value: "mgmt.npss.bos2.lab,10.128.0.0/14,,172.30.0.0/16,172.31.1.0/24"  
        name: acm-readiness-for-ztp
        image: quay.io/sfhassan/oc_net_tools
        command:
        - /bin/bash
        - -c
        - |
          echo "### patching provisioning-config"
          echo "...But first, wait for it to exist.."
          provisioncount=1
          while [ $provisioncount -le 1 ]; do
            provisioncount=$(oc get provisionings.metal3.io | wc -l)
            echo "...still waiting....Count is " $provisioncount
            sleep 10
          done
          oc patch provisioning provisioning-configuration --type merge -p '{"spec":{"watchAllNamespaces": true }'
          echo "### Extracting pull secret "
          mkdir ~/cim
          cd ~/cim
          # Extract the cluster pull secret
          oc extract secret/pull-secret -n openshift-config --confirm --to=.
          # Create new pull secret for remote clusters
          oc -n multicluster-engine create secret generic assisted-deployment-pull-secret \
          --type=kubernetes.io/dockerconfigjson --from-file=.dockerconfigjson=.dockerconfigjson
          echo "### Extracting quay certificate ..."
          quayready=1
          while [ $quayready != 0 ]; do
            date
            echo "Waiting for quay config map to be ready..."
            oc wait -n quay-enterprise --for=jsonpath={.kind}="ConfigMap" configmap/kube-root-ca.crt --timeout=10s
            quayready=$?
            sleep 5;
          done
          echo "Quay CM is ready...extracting now..."
          oc extract -n quay-enterprise configmap/kube-root-ca.crt
          # CM called temp would have been created by previous syncwave... 
          echo "Extracting CM called temp... "
          oc extract -n multicluster-engine cm/temp
          oc -n multicluster-engine create configmap mirror-registry-config-map --from-file=ca-bundle.crt=ca.crt --from-file=registries.conf=mirror-list

          # Waiting for Quay 
            #
            #          echo "Checking for config map for ImageSource..."
            #          while [ $(oc get cm -n quay-enterprise imageset | wc -l) != "2" ]; do echo "watiting for 5 seconds.."; sleep 5; done 
            #          ## Extract and modify pull secret
            #          echo "Extract the current pull secret"
            #          oc extract -n openshift-config secret/pull-secret --confirm --to=.
            #          echo "Add new quay credentials to pull secret"
            #          QUAY_HOSTNAME=quay-registry-quay-quay-enterprise.apps.mgmt.npss.bos2.lab
            #          QUAY_USER=quay
            #          QUAY_PASSWD=registry
            #          b64auth=$(echo -n $QUAY_USER:$QUAY_PASSWD | base64 -w0); echo $b64auth
            #          AUTHSTRING="{\"$QUAY_HOSTNAME\": {\"auth\": \"$b64auth\",\"email\": \"dummy@quay1.npss\"}}"; 
            #          echo $AUTHSTRING
            #          jq -c ".auths += $AUTHSTRING" < .dockerconfigjson > .dockerconfigjson-upd
            #          echo "Push updated pull secret back to the cluster"
            #          oc -n openshift-config set data secret/pull-secret --from-file=.dockerconfigjson=.dockerconfigjson-upd
            #          mkdir ~/.docker
            #          mv .dockerconfigjson-upd ~/.docker/config.json
            #          echo "Mirroring..."
            #          oc-mirror --config=./imagesetconfiguration.yml docker://$QUAY_HOSTNAME/ocp/ocp4 
        name: acm-readiness-for-ztp
      dnsPolicy: ClusterFirst
      activeDeadlineSeconds: 900
      restartPolicy: Never
      serviceAccountName: {{ .Values.acm.sa }}
      terminationGracePeriodSeconds: 60
